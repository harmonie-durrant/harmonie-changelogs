{"mappings":"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","sources":["src/index.js","src/changelog-card.js"],"sourcesContent":["import { ChangeLogCard } from './changelog-card.js';\nimport { ChangelogCardEditor } from './changelog-card.js';\n\ncustomElements.define('changelog-card', ChangeLogCard);\n\ncustomElements.define('changelog-card-editor', ChangelogCardEditor);\n\nwindow.customCards = window.customCards || [];\nwindow.customCards.push({\n\ttype: 'changelog-card',\n\tname: 'Changelog Card',\n\tdescription: 'A card that displays changelog information from an input_text entity'\n});\n","export class ChangeLogCard extends HTMLElement {\n    static getStubConfig() {\n        return { type: 'custom:changelog-card' };\n    }\n\n    static async getConfigElement() {\n        return document.createElement('changelog-card-editor');\n    }\n\n    static get properties() {\n        return {\n            hass: {},\n            _config: {},\n            _dialog: {}\n        };\n    }\n\n    constructor() {\n        super();\n        this._config = {};\n        this._dialog = null;\n        this._hass = null;\n        this._lastViewedKey = 'changelog_last_viewed';\n        this._hasAutoOpened = false;\n        this._defaultButtonText = 'Show Changelog';\n    }\n\n    setConfig(config) {\n        if (!config || !config.entity) {\n            throw new Error('Please define an input_text entity');\n        }\n        // Verify entity exists and is the correct type\n        if (this._hass && (!this._hass.states[config.entity] ||\n            !this._hass.states[config.entity].entity_id.startsWith('input_text.'))) {\n            throw new Error('Entity must be an input_text entity');\n        }\n        \n        const configChanged = JSON.stringify(this._config) !== JSON.stringify(config);\n        this._config = config;\n        \n        if (configChanged) {\n            this._createCard(); // Recreate card when config changes\n        }\n    }\n\n    _checkShouldAutoOpen() {\n        // Don't show popup if URL ends with ?edit=1\n        if (window.location.search.includes('edit=1')) return false;\n\n        if (this._hasAutoOpened || !this._hass || !this._config.entity) return false;\n\n        const state = this._hass.states[this._config.entity];\n        if (!state || !state.last_updated) return false;\n\n        const lastUpdated = new Date(state.last_updated).getTime();\n        const lastViewed = parseInt(localStorage.getItem(this._lastViewedKey) || '0');\n\n        return lastUpdated > lastViewed;\n    }\n\n    _updateLastViewed() {\n        localStorage.setItem(this._lastViewedKey, Date.now().toString());\n    }\n\n    set hass(hass) {\n        this._hass = hass;\n        if (this._config && this._config.entity) {\n            this.render();\n        }\n    }\n\n    async firstUpdated() {\n        await this._createCard();\n    }\n\n    async _createCard() {\n        // Initialize last viewed time if it doesn't exist\n        if (!localStorage.getItem(this._lastViewedKey)) {\n            this._updateLastViewed();\n        }\n\n        const shadow = this.attachShadow({ mode: 'open' });\n\n        // Create styles\n        const style = document.createElement('style');\n        style.textContent = `\n            ha-dialog {\n                --mdc-dialog-min-width: 400px;\n                --mdc-dialog-max-width: 600px;\n                --mdc-dialog-heading-ink-color: var(--primary-text-color);\n                --mdc-dialog-content-ink-color: var(--primary-text-color);\n                --justify-action-buttons: flex-end;\n                --ha-dialog-border-radius: var(--ha-card-border-radius, 12px);\n            }\n\n            .heading {\n                border-bottom: 1px solid var(--divider-color);\n                padding: 16px;\n                display: flex;\n                align-items: center;\n                background: var(--ha-card-header-background, var(--card-background-color, var(--primary-background-color)));\n                border-top-left-radius: var(--ha-dialog-border-radius);\n                border-top-right-radius: var(--ha-dialog-border-radius);\n            }\n\n            .title {\n                display: flex;\n                align-items: center;\n                gap: 8px;\n                font-size: 1.2em;\n                font-weight: 500;\n                color: var(--ha-card-header-color, var(--primary-text-color));\n            }\n\n            .title-icon {\n                color: var(--ha-card-header-color, var(--primary-text-color));\n                --mdc-icon-size: 24px;\n            }\n\n            .content {\n                padding: 16px;\n            }\n\n            .changelog-content {\n                color: var(--primary-text-color);\n            }\n\n            .footer {\n                padding: 8px;\n                border-top: 1px solid var(--divider-color);\n                display: flex;\n                justify-content: flex-end;\n            }\n        `;\n\n        // Create content\n        const content = document.createElement('div');\n        content.innerHTML = `\n            <ha-dialog>\n                <div slot=\"heading\">\n                    <div class=\"heading\">\n                        <ha-icon icon=\"mdi:text-box-plus-outline\" class=\"title-icon\"></ha-icon>\n                        <div class=\"title\">Changelog</div>\n                    </div>\n                </div>\n\n                <div class=\"content\">\n                    <div class=\"changelog-content\"></div>\n                </div>\n\n                <div slot=\"primaryAction\" class=\"footer\">\n                    <ha-button dialogAction=\"close\">Dismiss</ha-button>\n                </div>\n            </ha-dialog>\n        `;\n\n        shadow.appendChild(style);\n        shadow.appendChild(content);\n\n        this._dialog = shadow.querySelector('ha-dialog');\n        const button = document.createElement('ha-button');\n        button.innerText = this._config.button_text || this._defaultButtonText;\n        button.addEventListener('click', () => this._openDialog());\n        button.style.display = this._config.hide_button ? 'none' : '';\n\n        shadow.appendChild(button);\n    }\n\n    render() {\n        if (!this._hass || !this._config || !this._config.entity) {\n            console.warn('Incomplete initialization');\n            return;\n        }\n\n        const entityId = this._config.entity;\n        const state = this._hass.states[entityId];\n\n        if (!state) {\n            console.error(`Entity ${entityId} not found`);\n            const alert = this.shadowRoot?.querySelector('ha-alert');\n            if (alert) {\n                alert.innerText = `Entity ${entityId} not found`;\n                alert.style.display = 'block';\n            }\n            return;\n        }\n\n        const alert = this.shadowRoot?.querySelector('ha-alert');\n        if (alert) {\n            alert.style.display = 'none';\n        }\n\n        const changelogContent = this.shadowRoot?.querySelector('.changelog-content');\n        if (changelogContent) {\n            // Convert newlines to <br> tags and display the changelog text\n            changelogContent.innerHTML = state.state ? state.state.replace(/\\n/g, '<br>') : '';\n        }\n\n        const button = this.shadowRoot?.querySelector('ha-button');\n        if (button) {\n            button.disabled = !state.state;\n            // Update button text and visibility\n            button.innerText = this._config.button_text || this._defaultButtonText;\n            button.style.display = this._config.hide_button ? 'none' : '';\n        }        // Check if we should auto-open the dialog\n        if (!this._hasAutoOpened && this._checkShouldAutoOpen()) {\n            this._hasAutoOpened = true;\n            this._openDialog();\n        }\n    }\n\n    _openDialog() {\n        if (!this._dialog) {\n            this._dialog = this.shadowRoot.querySelector('ha-dialog');\n        }\n        if (this._dialog) {\n            this._dialog.open = true;\n            // Update last viewed timestamp when dialog is opened\n            this._updateLastViewed();\n        }\n    }\n}\n\n\nexport class ChangelogCardEditor extends HTMLElement {\n    constructor() {\n        super();\n        this._config = {};\n        this._hass = null;\n        this._overridableElements = {};\n        this._rendered = false;\n        this._currentLanguage = 'en';\n        this._card_fields = [\n            {\n                name: 'entity',\n                label: 'Changelog Text Entity',\n                type: 'entity',\n                required: true,\n                description: 'Select an input_text entity that contains your changelog content.',\n                selector: { entity: { domain: 'input_text' } }\n            },\n            {\n                name: 'button_text',\n                label: 'Button Text',\n                type: 'text',\n                required: false,\n                description: 'Custom text for the changelog button. Leave empty to use the default text.',\n            },\n            {\n                name: 'hide_button',\n                label: 'Hide Button',\n                type: 'boolean',\n                required: false,\n                description: 'Hide the changelog button on the dashboard, the changelog will still show up when there are new entries.',\n            },\n        ];\n    }\n\n    set hass(hass) {\n        if (!hass) {\n            return;\n        }\n        this._currentLanguage = 'en';\n        if (!this._hass || this._hass.entities !== hass.entities) {\n            this._hass = hass;\n            if (this._rendered) {\n                this.render();\n            }\n        }\n    }\n\n    get hass() {\n        return this._hass;\n    }\n\n    setConfig(config) {\n        if (!this._hass) {\n            return;\n        }\n        this._config = config;\n        this.loadEntityPicker();\n        if (!this._rendered) {\n            this._rendered = true;\n            this.render();\n        }\n    }\n\n    _reorderConfig(config) {\n        const { grid_options, ...rest } = config;\n        return grid_options ? { ...rest, grid_options } : { ...rest };\n    }\n\n    _updateConfigProperty(key, value) {\n        const newConfig = { ...this._config };\n        if (value === '') {\n            delete newConfig[key];\n        } else {\n            newConfig[key] = value;\n        }\n        this._config = this._reorderConfig(newConfig);\n        \n        // Ensure config change is triggered properly\n        this.dispatchEvent(new CustomEvent('config-changed', { \n            detail: { config: { ...this._config } },\n            bubbles: true,\n            composed: true\n        }));\n    }\n\n    _createField({ name, label, type, required = false, description }) {\n        let inputElement;\n        const value = this._config[name] || '';\n\n        switch (type) {\n            case 'entity':\n                inputElement = document.createElement('ha-entity-picker');\n                inputElement.hass = this._hass;\n                break;\n            case 'boolean':\n                inputElement = document.createElement('ha-switch');\n                inputElement.checked = value === true;\n                break;\n            default:\n                inputElement = document.createElement('ha-textfield');\n                inputElement.type = 'text';\n        }\n\n        inputElement.style.display = 'flex';\n        inputElement.required = required;\n        inputElement.label = label;\n        inputElement.value = value;\n\n        if (type === 'boolean') {\n            inputElement.addEventListener('change', (event) => {\n                this._updateConfigProperty(name, event.target.checked);\n            });\n        } else {\n            inputElement.addEventListener('value-changed', (event) => {\n                const newValue = event.detail?.value || event.target.value;\n                this._updateConfigProperty(name, newValue);\n            });\n        }\n\n        const fieldContainer = document.createElement('div');\n        fieldContainer.style.marginBottom = '12px';\n        const fieldDescription = document.createElement('span');\n        fieldDescription.style.width = '90%';\n        fieldDescription.innerText = description;\n        fieldDescription.style.fontSize = '12px';\n        fieldDescription.style.color = '#888';\n\n        fieldContainer.appendChild(inputElement);\n        fieldContainer.appendChild(fieldDescription);\n\n        return fieldContainer;\n    }\n\n    async loadEntityPicker() {\n        if (!window.customElements.get(\"ha-entity-picker\")) {\n            const ch = await window.loadCardHelpers();\n            const c = await ch.createCardElement({ type: \"entities\", entities: [] });\n            await c.constructor.getConfigElement();\n            const haEntityPicker = window.customElements.get(\"ha-entity-picker\");\n        }\n    }\n\n    render() {\n        this.innerHTML = '';\n        const fragment = document.createDocumentFragment();\n\n        const container = document.createElement('div');\n        container.style.display = 'flex';\n        container.style.flexDirection = 'column';\n        container.style.flexWrap = 'wrap';\n        container.style.overflow = 'auto';\n        container.style.overflowX = 'hidden';\n        container.style.maxHeight = '100vh';\n\n        this._card_fields.forEach((field) => {\n            container.appendChild(this._createField({\n                name: field.name,\n                label: field.label,\n                type: field.type,\n                required: field.required,\n                description: field.description\n            }));\n        });\n\n        fragment.appendChild(container);\n        this.appendChild(fragment);\n    }\n}"],"names":[],"version":3,"file":"index.js.map"}